<div id="preloader">
	<script>
		function preloader() {
			const preloaderContainer = document.querySelector('#preloader');
			const hasCustomPreloader = document.querySelectorAll('[data-preloader]');


			if (hasCustomPreloader.length) {
				preloaderElements = Array.from(hasCustomPreloader).flatMap(el => {
					const targets = [];
					if (['IMG', 'VIDEO'].includes(el.tagName)) targets.push(el);
					targets.push(...el.querySelectorAll('img, video'));
					return targets;
				});

			} else {
				preloaderElements = document.querySelectorAll('img');
			}


			if (preloaderElements.length) {
				const preloaderStyleTemplate = `
				<style>
					* {
						padding: 0px;
						margin: 0px;
						border: 0px;
						box-sizing: border-box;
					}
					.preloader{
						// pointer-events: none;
						z-index: 20;
						position: fixed;
						width: 100%;
						height: 100%;
						top: 0;
						left: 0;
						display: grid;
						place-items: center;
					}
					.preloader__body{
						padding: 0.93rem;
						display: flex;
						flex-direction: column;
					}
					.preloader__logo {
						margin-bottom: 3rem;
					}
					.preloader__logo svg {
						width: 30vw;
						height: auto;
					}
					.preloader__counter{
						font-size: 10rem;
					}
					.preloader__line{}
					.preloader__line span{
						display: inline-block;
						transition: width 0.2s ease;
						height: 0.2rem;
						background-color: #ffffff;
					}
					.lock body{
						overflow: hidden;
						touch-action: none;
						overscroll-behavior: none;
					}
					.loading body>*:not(.preloader){
						opacity: 0;
						visibility: hidden;
					}
					.loaded body>*:not(.preloader){
						transition: opacity 0.5s ease 0s;
						opacity: 1;
						visibility: visible;
					}
					@media (max-width:30.061em) {
					.preloader__logo svg {
						width: 65vw;
						height: auto;
					}
						}
				</style>`;

				document.head.insertAdjacentHTML("beforeend", preloaderStyleTemplate);

				const preloaderTemplate = `
					<div class="preloader">
						<div class="preloader__body">
							<div class="preloader__logo">
								<svg width="221" height="49" viewBox="0 0 221 49" fill="none" xmlns="http://www.w3.org/2000/svg">
									<g clip-path="url(#clip0_5301_26795)">
									<path d="M0 8.99088H10.7805V12.1377H11.0051C11.9035 11.0138 13.0264 10.1147 14.374 9.44042C15.7215 8.54134 17.2937 8.0918 18.8659 8.0918C21.3364 8.0918 23.5823 8.76611 25.3791 9.88996C27.4004 11.0138 28.748 12.812 29.8709 15.2845C30.9939 17.7569 31.4431 20.679 31.4431 24.2753C31.4431 29.6698 30.3201 33.7157 27.8496 36.4129C25.6037 39.1101 22.4594 40.4588 18.6413 40.4588C15.497 40.4588 12.8018 39.1101 10.5559 36.4129H10.7805V48.7753H0V8.99088ZM12.128 30.1193C13.0264 31.2432 14.374 31.9175 15.9461 31.9175C17.5183 31.9175 18.8659 31.2432 19.7642 29.8946C20.6626 28.5459 21.1118 26.7478 21.1118 24.2753C21.1118 21.8028 20.6626 20.0046 19.7642 18.8808C18.8659 17.7569 17.5183 17.0826 15.7215 17.0826C14.1494 17.0826 12.8018 17.7569 11.9035 19.1056C11.0051 20.2294 10.5559 22.0276 10.5559 24.5001C10.5559 26.9725 11.2297 28.7707 12.128 30.1193Z" fill="#FEFEFE"/>
									<path d="M36.6088 38.6606C34.1383 37.312 32.3416 35.5138 30.994 33.0413C29.6464 30.5689 28.9727 27.6468 28.9727 24.2753C28.9727 20.9037 29.6464 18.2065 30.994 15.734C32.3416 13.2615 34.1383 11.4634 36.6088 10.1147C39.0794 8.76611 41.7745 8.0918 44.9188 8.0918C48.0631 8.0918 50.9828 8.76611 53.4533 10.1147C55.9239 11.4634 57.7206 13.2615 59.0682 15.734C60.4157 18.2065 61.0895 21.1285 61.0895 24.2753C61.0895 27.6468 60.4157 30.5689 59.0682 33.0413C57.7206 35.5138 55.6993 37.312 53.4533 38.6606C50.9828 40.0092 48.2877 40.6835 44.9188 40.6835C41.7745 40.6835 38.8548 40.0092 36.6088 38.6606ZM41.1007 30.1193C41.9991 31.4679 43.3466 32.1423 45.1434 32.1423C46.9401 32.1423 48.0631 31.4679 49.1861 30.1193C50.0844 28.7707 50.5336 26.9725 50.5336 24.5001C50.5336 22.0276 50.0844 20.2294 49.1861 18.8808C48.2877 17.5322 46.9401 16.8579 45.1434 16.8579C43.3466 16.8579 41.9991 17.5322 41.1007 18.8808C40.2023 20.2294 39.7531 22.0276 39.7531 24.5001C39.5286 26.7478 39.9777 28.7707 41.1007 30.1193Z" fill="#FEFEFE"/>
									<path d="M61.7634 38.211C59.2928 36.6376 57.7207 34.1652 57.2715 31.2431L66.0306 28.9954C66.4798 30.3441 67.1536 31.2431 68.052 32.1422C68.9503 32.8165 70.2979 33.2661 72.0947 33.2661C73.2176 33.2661 74.3406 33.0413 75.0144 32.5918C75.6882 32.1422 76.1373 31.6927 76.1373 31.0184C76.1373 30.3441 75.6882 29.8945 75.0144 29.445C74.3406 28.9954 72.993 28.7707 70.9717 28.3211C66.929 27.6468 63.7847 26.523 61.5388 24.9496C59.2928 23.3762 58.3945 21.1285 58.3945 17.9817C58.3945 15.0596 59.742 12.5872 62.2125 10.789C64.6831 8.99084 68.052 8.31653 72.0947 8.31653C80.18 8.31653 84.8965 11.2385 86.244 17.3074L77.4849 19.7798C76.3619 17.0826 74.5652 15.734 71.8701 15.734C70.9717 15.734 70.2979 15.9587 69.6241 16.1835C68.9503 16.633 68.7258 17.0826 68.7258 17.5321C68.7258 18.2064 69.1749 18.656 70.0733 19.1055C70.9717 19.5551 72.5438 20.0046 74.7898 20.4541C79.0571 21.1285 81.9768 22.2523 83.9981 23.8257C85.7949 25.3991 86.9178 27.6468 86.9178 30.5688C86.9178 33.7156 85.5703 36.1881 83.0997 37.9863C80.6292 39.7844 77.0357 40.6835 72.3193 40.6835C67.6028 40.6835 64.2339 40.0092 61.7634 38.211Z" fill="#FEFEFE"/>
									<path d="M85.5703 0H96.1262L95.9016 13.0367H96.1262C97.0246 11.4633 98.3721 10.3394 100.169 9.44037C101.966 8.54128 103.762 8.09174 105.784 8.09174C109.377 8.09174 112.072 8.99083 113.869 11.0138C115.666 13.0367 116.564 15.9587 116.564 20.2294V25.1743V40.0092H105.784V25.1743V22.2523C105.784 18.8807 104.212 17.3073 101.292 17.3073C99.7197 17.3073 98.3721 17.7569 97.4738 18.8807C96.5754 20.0046 96.1262 21.3532 96.1262 23.1514V39.7844H85.5703V0Z" fill="#FEFEFE"/>
									<path d="M124.648 17.9817V11.6881H129.365C130.937 11.6881 132.06 11.9129 132.958 12.5872C133.857 13.2615 134.306 14.1606 134.306 15.5092C134.306 18.2065 132.734 19.5551 129.365 19.5551H127.119V24.0505H124.648V17.9817ZM129.589 17.9817C131.162 17.9817 132.06 17.3074 132.06 15.9588C132.06 15.2844 131.835 14.8349 131.386 14.3854C130.937 14.1606 130.263 13.9358 129.589 13.9358H127.119V17.9817H129.589Z" fill="#FEFEFE"/>
									<path d="M136.103 18.2064L138.349 11.9128H141.044L143.29 18.2064L145.536 24.2752H143.066L142.167 21.3532H139.921H137.676L136.777 24.2752H134.307L136.103 18.2064ZM139.472 19.555H141.269L139.472 14.3853L137.676 19.555H139.472Z" fill="#FEFEFE"/>
									<path d="M148.006 23.8257C147.107 23.3761 146.434 22.4771 145.984 21.578C145.535 20.6789 145.311 19.555 145.311 18.2064C145.311 16.8578 145.535 15.7339 145.984 14.8349C146.434 13.9358 147.107 13.0367 148.006 12.5872C148.904 12.1376 149.802 11.9128 150.925 11.9128C152.498 11.9128 153.621 12.3624 154.519 13.0367C155.417 13.711 155.866 14.8349 156.091 16.1835L153.845 16.8578C153.621 15.9587 153.396 15.2844 152.947 14.6101C152.722 13.9358 151.824 13.4862 151.15 13.4862C150.252 13.4862 149.353 13.9358 148.679 14.6101C148.006 15.5092 147.781 16.4083 147.781 17.9816C147.781 19.3303 148.006 20.4541 148.679 21.3532C149.353 22.2523 150.027 22.4771 151.15 22.4771C152.048 22.4771 152.722 22.2523 153.171 21.8028C153.621 21.3532 154.07 20.4541 154.07 19.555L156.316 20.2294C156.091 21.578 155.642 22.7018 154.519 23.3761C153.621 24.2752 152.498 24.5 150.925 24.5C149.802 24.5 148.904 24.2752 148.006 23.8257Z" fill="#FEFEFE"/>
									<path d="M157.889 11.9128H160.359V17.7569L165.076 11.9128H167.771L163.728 16.8578L168.22 24.5H165.525L162.156 18.656L160.359 20.9037V24.5H157.889V11.9128Z" fill="#FEFEFE"/>
									<path d="M170.914 18.2064L173.16 11.9128H175.855L178.101 18.2064L180.347 24.2752H177.876L176.978 21.3532H174.732H172.486L171.588 24.2752H169.117L170.914 18.2064ZM174.283 19.555H176.08L174.283 14.3853L172.486 19.555H174.283Z" fill="#FEFEFE"/>
									<path d="M182.818 23.8257C181.92 23.3761 181.471 22.4771 181.021 21.578C180.572 20.6789 180.348 19.3303 180.348 18.2064C180.348 16.8578 180.572 15.7339 181.021 14.8349C181.471 13.9358 182.144 13.0367 183.043 12.5872C183.941 12.1376 184.84 11.9128 186.187 11.9128C187.759 11.9128 188.882 12.3624 189.781 13.0367C190.454 13.4862 190.904 14.6101 191.128 15.7339L188.882 16.4083C188.658 15.5092 188.433 14.8349 187.759 14.3853C187.085 13.9358 186.636 13.4862 185.962 13.4862C185.064 13.4862 184.166 13.9358 183.492 14.6101C182.818 15.5092 182.594 16.4083 182.594 17.9816C182.594 19.3303 182.818 20.4541 183.492 21.3532C184.166 22.2523 184.84 22.4771 185.962 22.4771C186.861 22.4771 187.759 22.2523 188.208 21.8028C188.658 21.3532 189.107 20.4541 189.107 19.3303H185.513V17.7569H191.128V21.1284V24.2752H189.556L189.331 22.7018C188.882 23.3761 188.433 23.8257 187.759 24.0505C187.085 24.2752 186.412 24.5 185.513 24.5C184.615 24.5 183.717 24.2752 182.818 23.8257Z" fill="#FEFEFE"/>
									<path d="M193.598 11.9128H196.068V24.2752H193.598V11.9128Z" fill="#FEFEFE"/>
									<path d="M198.314 18.2064V11.9128H201.01L206.175 20.9037V17.3073V11.9128H208.421V18.2064V24.5H205.726L200.56 15.5092V19.1055V24.5H198.314V18.2064Z" fill="#FEFEFE"/>
									<path d="M212.689 23.8257C211.791 23.3761 211.342 22.4771 210.893 21.578C210.443 20.6789 210.219 19.3303 210.219 18.2064C210.219 16.8578 210.443 15.7339 210.893 14.8349C211.342 13.9358 212.016 13.0367 212.914 12.5872C213.812 12.1376 214.711 11.9128 216.058 11.9128C217.63 11.9128 218.753 12.3624 219.652 13.0367C220.325 13.4862 220.775 14.6101 220.999 15.7339L218.753 16.4083C218.529 15.5092 218.304 14.8349 217.63 14.3853C216.957 13.9358 216.732 13.4862 215.834 13.4862C214.935 13.4862 214.037 13.9358 213.363 14.6101C212.689 15.5092 212.465 16.4083 212.465 17.9816C212.465 19.3303 212.689 20.4541 213.363 21.3532C214.037 22.2523 214.711 22.4771 215.834 22.4771C216.732 22.4771 217.63 22.2523 218.08 21.8028C218.529 21.3532 218.978 20.4541 218.978 19.3303H215.384V17.7569H220.999V21.1284V24.2752H219.427L219.202 22.7018C218.753 23.3761 218.304 23.8257 217.63 24.0505C216.957 24.2752 216.283 24.5 215.384 24.5C214.486 24.5 213.588 24.2752 212.689 23.8257Z" fill="#FEFEFE"/>
									<path d="M124.648 33.9403V27.6467H128.467C130.712 27.6467 132.285 28.0963 133.408 29.2201C134.531 30.344 134.98 31.9174 134.98 33.9403C134.98 35.9632 134.531 37.5366 133.408 38.6605C132.285 39.7843 130.712 40.2339 128.467 40.2339H124.648V33.9403ZM128.691 37.9862C131.386 37.9862 132.958 36.6376 132.958 33.7155C132.958 30.7935 131.611 29.4449 128.691 29.4449H127.119V37.9862H128.691Z" fill="#FEFEFE"/>
									<path d="M136.777 27.6467H145.312V29.6697H139.248V32.8165H144.638V34.6146H139.248V37.9862H145.536V40.0091H137.002V27.6467H136.777Z" fill="#FEFEFE"/>
									<path d="M147.781 39.3348C146.883 38.6605 146.434 37.7614 146.209 36.6376L148.23 35.9633C148.455 36.8624 148.68 37.3119 149.129 37.7614C149.578 38.211 150.252 38.4358 151.15 38.4358C151.824 38.4358 152.498 38.211 152.947 37.9862C153.396 37.7614 153.621 37.3119 153.621 36.8624C153.621 36.4128 153.621 36.1881 153.396 35.9633C153.171 35.7385 152.947 35.5137 152.498 35.289C152.048 35.0642 151.599 35.0642 150.701 34.8394C149.353 34.6147 148.23 34.1651 147.557 33.4908C146.883 32.8165 146.658 32.1422 146.658 31.0183C146.658 29.8945 147.107 28.9954 147.781 28.3211C148.455 27.6468 149.578 27.422 150.925 27.422C152.273 27.422 153.396 27.6468 154.294 28.3211C155.193 28.9954 155.642 29.8945 155.867 30.7936L153.621 31.4679C153.621 30.7936 153.171 30.344 152.722 29.8945C152.273 29.4449 151.599 29.2202 150.925 29.2202C150.252 29.2202 149.802 29.4449 149.353 29.6697C148.904 29.8945 148.904 30.344 148.904 30.7936C148.904 31.2431 148.904 31.4679 149.129 31.6926C149.353 31.9174 149.578 32.1422 150.027 32.367C150.476 32.5917 150.925 32.5917 151.599 32.8165C153.171 33.0413 154.294 33.4908 154.968 34.1651C155.642 34.8394 155.867 35.5137 155.867 36.6376C155.867 37.3119 155.642 37.9862 155.193 38.6605C154.744 39.1101 154.294 39.5596 153.396 40.0092C152.722 40.2339 151.824 40.4587 150.925 40.4587C149.802 40.2339 148.68 40.0092 147.781 39.3348Z" fill="#FEFEFE"/>
									<path d="M157.664 27.6467H160.135V40.0091H157.664V27.6467Z" fill="#FEFEFE"/>
									<path d="M164.402 39.5596C163.504 39.11 163.055 38.2109 162.605 37.3119C162.156 36.4128 161.932 35.0642 161.932 33.9403C161.932 32.5917 162.156 31.4678 162.605 30.5687C163.055 29.6697 163.728 28.7706 164.627 28.321C165.525 27.8715 166.424 27.6467 167.771 27.6467C169.343 27.6467 170.466 28.0963 171.365 28.7706C172.263 29.4449 172.712 30.5687 172.937 31.9174L170.691 32.5917C170.466 31.6926 170.242 31.0183 169.568 30.5687C169.119 30.1192 168.445 29.8944 167.546 29.8944C166.648 29.8944 165.75 30.344 165.076 31.0183C164.402 31.6926 164.178 32.8165 164.178 34.3898C164.178 35.7385 164.402 36.8623 165.076 37.7614C165.75 38.6605 166.424 38.8853 167.546 38.8853C168.445 38.8853 169.343 38.6605 169.792 38.2109C170.242 37.7614 170.691 36.8623 170.691 35.7385H167.097V33.9403H172.712V37.3119V40.4587H171.14L170.915 38.8853C170.466 39.5596 170.017 40.0091 169.343 40.2339C168.669 40.4587 167.996 40.6834 167.097 40.6834C166.199 40.2339 165.301 40.0091 164.402 39.5596Z" fill="#FEFEFE"/>
									<path d="M175.182 33.9403V27.6467H177.877L183.042 36.6376V33.0412V27.6467H185.288V33.9403V40.2339H182.593L177.428 31.2431V34.8394V40.2339H175.182V33.9403Z" fill="#FEFEFE"/>
									</g>
									<defs>
									<clipPath id="clip0_5301_26795">
									<rect width="221" height="49" fill="white"/>
									</clipPath>
									</defs>
								</svg>

								</div>
							<div class="preloader__line"><span></span></div>
						</div>
					</div>`;
				document.body.insertAdjacentHTML("beforeend", preloaderTemplate);

				const
					preloader = document.querySelector('.preloader'),
					showPecentLoad = document.querySelector('.preloader__counter'),
					showLineLoad = document.querySelector('.preloader__line span'),
					htmlDocument = document.documentElement;

				let imagesLoadedCount = 0;
				let counter = 0;
				let progress = 0;


				htmlDocument.classList.add('loading');
				htmlDocument.classList.add('lock');


				preloaderElements.forEach(el => {
					if (el.tagName === 'IMG') {
						const imgClone = new Image();
						imgClone.onload = imageLoaded;
						imgClone.onerror = imageLoaded;
						imgClone.src = el.dataset.src || el.src;
					} else if (el.tagName === 'VIDEO') {
						if (el.readyState >= 2) {
							imageLoaded(); // уже загружено
						} else {
							el.addEventListener('loadeddata', imageLoaded, {
								once: true
							});
							el.addEventListener('error', imageLoaded, {
								once: true
							});
						}
					}
				});


				function setValueProgress(progress) {
					if (showPecentLoad) showPecentLoad.innerText = `${progress}%`;
					if (showLineLoad) showLineLoad.style.width = `${progress}%`;
				}
				if (showPecentLoad) setValueProgress(progress);

				function imageLoaded() {
					imagesLoadedCount++;
					progress = Math.round((100 / preloaderElements.length) * imagesLoadedCount);
					const intervalId = setInterval(() => {
						if (counter >= progress) {
							clearInterval(intervalId);
						} else {
							setValueProgress(++counter);
							if (counter >= 100) addLoadedClass();
						}
					}, 10);
				}

				function addLoadedClass() {
					setTimeout(() => {
						htmlDocument.classList.add('loaded');
						htmlDocument.classList.remove('lock');
						htmlDocument.classList.remove('loading');
					}, 500);
					setInterval(() => {
						preloader.remove();
						preloaderContainer.remove();
					}, 500);
				}
			} else {
				preloaderContainer.remove();
			}
		}
		preloader();
	</script>
</div>